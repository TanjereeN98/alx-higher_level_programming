1-my_list.txt

=======================
How to Use 1-my_list.py
=======================

Usage
----------
MyList Class has a public instace method: def print_sorted(self): that prints the list, but sorted (ascending sort)

::

>>> MyList = __import__('1-my_list').MyList
>>> lst = MyList()

::

>>> lst.print_sorted()
[]

::

>>> lst.append(1)
>>> lst.append(4)
>>> lst.append(2)
>>> lst.append(3)
>>> lst.append(5)
>>> lst.print_sorted()
[1, 2, 3, 4, 5]

::

>>> lst[4] = 6
>>> print(lst)
[1, 4, 2, 3, 6]

::

>>> lst.remove(1)
>>> lst.print_sorted()
[2, 3, 4, 6]

::

>>> lst = MyList([13, 1, 0, 3, -2, 5])
>>> lst.print_sorted()
[-2, 0, 1, 3, 5, 13]

::

>>> lst = MyList(['g', 'a', 'z', 'b'])
>>> lst.print_sorted()
['a', 'b', 'g', 'z']

::

>>> my_list = MyList([10, 'a', 'salma', 2.5])
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'str' and 'int'

::

>>> lst.print_sorted(1)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

::

>>> my_list = MyList(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

::

>>> my_list = MyList([10, 1, 5, 2])
>>> my_list.print_sorted(1)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

::

>>> my_list = MyList([1, 4, 2, 3], [1, 2, 3])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2
