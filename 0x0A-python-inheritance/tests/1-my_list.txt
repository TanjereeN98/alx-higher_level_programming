1-my_list.txt
==============
Importing the module
+++++++++++++++++++++++++++++

>>> MyList = __import__('1-my_list').MyList

# Testing with string list:
	>>> ls = MyList()
	>>> ls.append("str1")
	>>> ls.append("str2")
	>>> ls.append("str3")
	>>> ls.print_sorted()
	['str1', 'str2', 'str3']

	>>> ls.append(4)
	>>> ls.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: '<' not supported between instances of 'int' and 'str'

	>>> ls2 = MyList()
	>>> ls2.append(True)
	>>> ls2.append(False)
	>>> ls2.print_sorted()
	[False, True]

	>>> ls2.append(4)
	>>> ls2.print_sorted()
	[False, True, 4]

	>>> ls2.append(3.2)
	>>> ls2.print_sorted()
	[False, True, 3.2, 4]

	>>> ls2.append({"Aloo" : "Hey"})
	>>> ls2.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: '<' not supported between instances of 'dict' and 'float'

	>>> ls3 = MyList()
	>>> ls3.append()
	Traceback (most recent call last):
	...
	TypeError: append() takes exactly one argument (0 given)

	>>> ls3.append((1, 2))
	>>> ls3.append((1, 1))
	>>> ls3.print_sorted()
	[(1, 1), (1, 2)]

	>>> ls3.append("str1")
	>>> ls3.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: '<' not supported between instances of 'str' and 'tuple'

	>>> ls4 = MyList(4)
	Traceback (most recent call last):
	...
	TypeError: 'int' object is not iterable

	>>> ls4 = MyList(True)
	Traceback (most recent call last):
	...
	TypeError: 'bool' object is not iterable

	>>> ls4 = MyList("str")
	>>> ls4.print_sorted()
	['r', 's', 't']

	>>> ls5 = MyList(3.2)
	Traceback (most recent call last):
	...
	TypeError: 'float' object is not iterable

	>>> ls5 = MyList((3, 2))
	>>> ls5.print_sorted()
	[2, 3]
